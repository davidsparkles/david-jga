{"version":3,"sources":["api/useData.ts","api/usePostQuest.ts","components/QuestDetails.tsx","components/Quests.tsx","components/GameHeader.tsx","components/GameFooter.tsx","components/Levels.tsx","api/usePostLevels.ts","components/Rewards.tsx","components/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getData","a","fetch","window","location","hostname","res","status","json","console","error","statusText","text","Error","usePostQuest","useState","loading","setLoading","setError","post","useCallback","values","method","mode","cache","credentials","headers","referrerPolicy","body","JSON","stringify","QuestDetails","props","quest","onBack","permission","title","description","maxXp","minLevel","xp","disabled","archived","setValues","useEffect","onSave","id","onDelete","delete","className","onClick","value","onChange","evt","target","rows","type","parseInt","state","checked","versions","map","created_at","fields","Intl","DateTimeFormat","format","Date","substring","max_xp","min_level","Quests","filterList","setFilterList","filterArchivedList","setFilterArchivedList","selectedQuest","setSelectedQuest","refetch","quests","filter","index","formatDescription","length","GameHeader","data","currentLevel","maxLevel","Progress","current","xpWithinCurrentLevel","max","xpToNextLevel","ratio","style","width","GameFooter","gridTemplateColumns","undefined","to","pathname","search","Levels","levels","sort","b","requiredXp","deleteElement","i","changeElement","valueNew","valueBefore","diff","usePostLevels","Rewards","Game","setData","log","useData","path","exact","component","p","App","toLowerCase","includes","getPermission","onTouchMove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbd5ba43.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nexport type questState = \"open\" | \"closed\" | \"hidden\";\n\nexport interface Quest {\n  id: string;\n  title: string;\n  description: string;\n  maxXp: number;\n  xp: number | null;\n  minLevel: number;\n  disabled: boolean;\n  archived: boolean;\n  state: questState;\n  versions?: Version[];\n}\n\nexport interface Version {\n  id: number;\n  quest_id: number;\n  created_at: string;\n  fields: any;\n}\n\nexport interface Level {\n  id: number;\n  requiredXp: number;\n}\n\nexport interface Data {\n  maxLevel: number;\n  currentLevel: number;\n  currentXp: number;\n  xpWithinCurrentLevel: number;\n  xpToNextLevel: number;\n  quests: Quest[];\n  levels: Level[];\n}\n\nasync function getData(): Promise<Data> {\n  const res = await fetch(`${window.location.hostname === \"localhost\" ? \"http://localhost:3000\" : \"\"}/api/data`);\n  if (res.status === 200) return res.json();\n  console.error(`Fetch error: ${res.status} ${res.statusText} ${res.text()}`);\n  throw new Error(res.statusText);\n}\n\nexport function useData(): { data?: Data; error?: any; loading: boolean; refetch: () => void } {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [data, setData] = useState<Data | undefined>(undefined);\n  const [error, setError] = useState<any | undefined>(undefined);\n\n  const refetch = useCallback(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        setData(await getData());\n        setError(undefined);\n      } catch (err) {\n        console.log(err);\n        setData(undefined);\n        setError(\"Upps ein Fehler ist aufgetreten.\");\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(refetch, [refetch]);\n\n  return { data, error, loading, refetch };\n}\n","import { useCallback, useState } from \"react\";\n\ninterface Values {\n  id?: string;\n  title: string;\n  description: string;\n  maxXp: number;\n  minLevel: number;\n  disabled: boolean;\n  archived: boolean;\n}\n\nexport function usePostQuest() {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any | null>(null);\n\n  const post = useCallback(async (values: Values | { delete: true; id: string }) => {\n    try {\n      setLoading(true);\n      await fetch(`${window.location.hostname === \"localhost\" ? \"http://localhost:3000\" : \"\"}/api/quest`, {\n        method: \"POST\",\n        mode: \"no-cors\",\n        cache: 'no-cache',\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(values)\n      })\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [setError, setLoading]);\n\n  return { loading, error, post };\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { Quest } from \"../api/useData\";\nimport { usePostQuest } from \"../api/usePostQuest\";\nimport { Permission } from \"../permission\";\nimport \"./QuestDetails.css\";\n\ninterface Values {\n  title: string;\n  description: string;\n  maxXp: number;\n  minLevel: number;\n  xp: number | null;\n  disabled: boolean;\n  archived: boolean;\n}\n\nexport default function QuestDetails(props: { quest: Quest; onBack: () => void; permission: Permission }): JSX.Element {\n  const { quest, onBack, permission } = props;\n\n  const [values, setValues] = useState<Values>({ title: \"\", description: \"\", maxXp: 0, minLevel: 0, xp: null, disabled: false, archived: false });\n\n  const { loading, error, post } = usePostQuest();\n\n  useEffect(() => {\n    if (quest != null) {\n      setValues({\n        title: quest.title ?? \"\",\n        description: quest.description ?? \"\",\n        maxXp: quest.maxXp,\n        minLevel: quest.minLevel,\n        xp: quest.xp,\n        disabled: quest.disabled ?? false,\n        archived: quest.archived ?? false\n      })\n    }\n  }, [quest]);\n\n  const onSave = useCallback(async () => {\n    await post({ id: quest.id, ...values });\n    onBack();\n  }, [onBack, post, quest, values]);\n\n  const onDelete = useCallback(async () => {\n    await post({ delete: true, id: quest.id });\n    onBack();\n  }, [onBack, post, quest]);\n\n  return <div className=\"questDetails\">\n    <div className=\"backArrowContainer\" >\n      <BiArrowBack className=\"backArrow\" onClick={() => onBack()} />\n      <div className=\"value\">\n        {\n          permission === \"edit\"\n          ?\n          (<input value={values.title} onChange={(evt) => setValues({ ...values, title: evt.target.value })} />)\n          :\n          quest.title ?? \"-\"\n        }\n      </div>\n    </div>\n    <div className=\"label\">\n      Beschreibung\n    </div>\n    <div className=\"value\">\n      {\n        permission === \"edit\"\n        ?\n        (<textarea rows={10} value={values.description} onChange={(evt) => setValues({ ...values, description: evt.target.value })} />)\n        :\n        quest.description ?? \"-\"\n      }\n    </div>\n    <div className=\"label\">\n      Mindestens Level\n    </div>\n    <div className=\"value\">\n      {\n        permission === \"edit\"\n        ?\n        (<input type=\"number\" value={values.minLevel} onChange={(evt) => setValues({ ...values, minLevel: parseInt(evt.target.value, 10) })} />)\n        :\n        quest.minLevel\n      }\n    </div>\n    <div className=\"label\">\n      Maximale XP\n    </div>\n    <div className=\"value\">\n      {\n        permission === \"edit\"\n        ?\n        (<input type=\"number\" value={values.maxXp} onChange={(evt) => setValues({ ...values, maxXp: parseInt(evt.target.value, 10) })} />)\n        :\n        quest.maxXp\n      }\n    </div>\n    <div className=\"label\">\n      Erreichte XP\n    </div>\n    <div className=\"value\">\n      {\n        permission === \"edit\"\n        ?\n        (<input type=\"number\" value={values.xp ?? \"-\"} onChange={(evt) => {\n          const xp = parseInt(evt.target.value, 10);\n          setValues({ ...values, xp: xp < 0 ? null : xp })\n        }} />)\n        :\n        quest.state !== \"closed\" ? \"-\" : quest.xp\n      }\n    </div>\n    {\n      permission === \"edit\" && (\n        <>\n          <div className=\"label\">\n            Ausblenden\n          </div>\n          <div className=\"value\">\n            <input type=\"checkbox\" checked={values.disabled} onChange={(evt) => setValues({ ...values, disabled: evt.target.checked })} />\n          </div>\n          <div className=\"label\">\n            Archiviert\n          </div>\n          <div className=\"value\">\n            <input type=\"checkbox\" checked={values.archived} onChange={(evt) => setValues({ ...values, archived: evt.target.checked })} />\n          </div>\n        <div className=\"buttonContainer\">\n          <div className=\"saveContainer\">\n            <button onClick={onSave}>Speichern</button>\n          </div>\n          {quest.archived && (\n            <div className=\"deleteContainer\">\n              <button onClick={onDelete}>Quest löschen</button>\n            </div>\n          )}\n          {loading ?? <>loading...</>}\n          {error && <>{JSON.stringify(error)}</>}\n        </div>\n        <h4>Versionen</h4>\n        <div className=\"versionList\">\n          {quest.versions?.map(({ id, created_at, fields }) => (\n            <div className=\"versionItem\">\n              Version {id} vom {new Intl.DateTimeFormat(\"de\").format(new Date(created_at))} {created_at.substring(11, 19)}{\" \"}\n              <button onClick={() => setValues({ ...values, ...fields, maxXp: fields.max_xp, minLevel: fields.min_level })}>🔃</button>\n            </div>\n          ))}\n        </div>\n      </>\n    )}\n  </div>;\n}","import React, { useState } from \"react\";\nimport { Quest } from \"../api/useData\";\nimport { usePostQuest } from \"../api/usePostQuest\";\nimport { Permission } from \"../permission\";\nimport QuestDetails from \"./QuestDetails\";\nimport \"./Quests.css\";\n\nexport default function Quests(props: { quests: Quest[]; permission: Permission; refetch: () => void }): JSX.Element {\n  const [filterList, setFilterList] = useState<boolean>(true);\n  const [filterArchivedList, setFilterArchivedList] = useState<boolean>(false);\n  const [selectedQuest, setSelectedQuest] = useState<Quest | null>(null);\n\n  const { loading, error, post } = usePostQuest();\n\n  if (selectedQuest != null) {\n    return <QuestDetails quest={selectedQuest} onBack={() => { setSelectedQuest(null); props.refetch() }} permission={props.permission} />;\n  }\n\n  return (\n    <>\n    <div className=\"questList\">\n      <div className=\"questFilter\">\n        <input type=\"checkbox\" checked={filterList} onChange={(evt) => setFilterList(evt.target.checked)} />Erledigte Quests\n      </div>\n      {props.permission === \"edit\" && (\n        <div className=\"questFilter\">\n          <input type=\"checkbox\" checked={filterArchivedList} onChange={(evt) => setFilterArchivedList(evt.target.checked)} />Archivierte Quests\n        </div>\n      )}\n      {props.quests\n        .filter(({ state }) => filterList === true ? true : state !== \"closed\")\n        .filter(({ archived }) => filterArchivedList === true ? true : archived === false)\n        .filter(({ archived, disabled }) => (archived === false && disabled === false) || props.permission === \"edit\")\n        .map((quest, index) => (\n          <div\n            key={index}\n            className={`questBox ${quest.state} ${quest.disabled ? \"disabled\" : \"\"} ${quest.archived ? \"archived\" : \"\"}`}\n            onClick={() => !(props.permission === \"none\" && quest.state === \"hidden\") && setSelectedQuest(quest)}\n          >\n            <div className=\"questHeader\">\n              <div className=\"questTitle\">{(props.permission === \"none\" && quest.state === \"hidden\") || quest.title == null ? \"🔒 ???\" : `${quest.state === \"hidden\" ? \"🔒 \" : \"\"}${quest.title}`}</div>\n              <div className=\"questPoints\">\n                {\n                  quest.state !== \"closed\" ? quest.maxXp : `${quest.xp} / ${quest.maxXp}`\n                } XP\n              </div>\n            </div>\n            {\n              !(props.permission === \"none\" && quest.state === \"hidden\") && <div className=\"questDescription\">{formatDescription(quest.description ?? \"???\")}</div>\n            }\n            {\n              quest.state === \"hidden\" && <div className=\"questDescription\">Ab Level {quest.minLevel}</div>\n            }\n          </div>\n      ))}\n    </div>\n    {props.permission === \"edit\" && (\n      <div className=\"createQuestContainer\">\n        <button onClick={async () => {\n          await post({ title: \"Neue Quest\", description: \"\", maxXp: 1, disabled: true, minLevel: 20, archived: false });\n          props.refetch();\n        }}>\n          Neue Quest\n        </button>\n      </div>\n    )}\n    {loading && \"loading ...\"}\n    {error && <>Fehler: {JSON.stringify(error)}</>}\n    </>\n  );\n}\n\nfunction formatDescription(description?: string): string {\n  if (description == null) return \"???\";\n  if (description.length < 100) return description;\n  return description.substring(0, 96) + \" ...\";\n}\n","import React from \"react\";\nimport { Data } from \"../api/useData\";\nimport \"./GameHeader.css\";\n\nexport default function GameHeader(props: { data?: Data }): JSX.Element {\n  return (\n    <div className=\"gameHeader\">\n      <div className=\"gameHeaderTitle\">Quest Master</div>\n      <div className=\"gameHeaderLevel\">\n        Level {props.data?.currentLevel ?? 1} / {props.data?.maxLevel ?? \"?\"}\n      </div>\n      <Progress current={props.data?.xpWithinCurrentLevel ?? 0} max={(props.data?.xpToNextLevel ?? 0) + (props.data?.xpWithinCurrentLevel ?? 1)} />\n    </div>\n  );\n}\n\nfunction Progress(props: { max: number; current: number }): JSX.Element {\n  const ratio = 100 * props.current / props.max;\n\n  return (\n    <div className=\"gameProgressContainer\">\n      <div className=\"gameProgressBar\">\n        <div style={{ width: `${ratio}%` }} className=\"gameProgressCurrent\">\n          <div className=\"gameProgressCurrentText\">\n            {props.current}\n          </div>\n        </div>\n      </div>\n      {props.max}↑\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Link, RouteChildrenProps } from \"react-router-dom\";\nimport { AiFillTrophy } from \"react-icons/ai\"\nimport { FaTasks } from \"react-icons/fa\"\nimport { RiFilePaper2Fill } from \"react-icons/ri\"\nimport \"./GameFooter.css\";\nimport { Permission } from \"../permission\";\n\nexport default function GameFooter(props: RouteChildrenProps & { permission: Permission }): JSX.Element {\n  return (\n    <div className=\"gameFooter\" style={props.permission === \"edit\" ? { gridTemplateColumns: \"auto auto auto\" } : undefined }>\n      <Link to={{ pathname: \"/quests\", search: props.location.search }}>\n        <FaTasks />\n      </Link>\n      <Link to={{ pathname: \"/rewards\", search: props.location.search }}>\n        <AiFillTrophy />\n      </Link>\n      {\n        props.permission === \"edit\" && (\n          <Link to={{ pathname: \"/levels\", search: props.location.search }}>\n            <RiFilePaper2Fill />\n          </Link>\n        )\n      }\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Level } from \"../api/useData\";\nimport { usePostLevels } from \"../api/usePostLevels\";\nimport \"./Levels.css\";\n\nexport default function Levels(props: { levels: Level[] }): JSX.Element {\n  const [values, setValues] = useState<number[]>([]);\n\n  useEffect(() => {\n    setValues(props.levels.sort((a, b) => a.id - b.id).map(({ requiredXp }) => requiredXp));\n  }, [props.levels]);\n\n  const deleteElement = useCallback((i: number) => {\n    if (i < 0 || i >= values.length) return;\n    setValues(values.filter((value, index) => index !== i));\n  }, [values, setValues]);\n\n  const changeElement = useCallback((i: number, valueNew: number) => {\n    if (i < 0 || i >= values.length || valueNew < 0) return;\n    const valueBefore = values[i - 1];\n    if (valueBefore != null && valueBefore >= valueNew) return;\n    const valueCurrent = values[i];\n    const diff = valueNew - valueCurrent;\n    setValues(values.map((value, index) => i <= index ? value + diff : value));\n  }, [values, setValues]);\n\n  const { loading, error, post } = usePostLevels();\n\n  return (\n    <div className=\"levels\">\n      <b>Levels</b>\n      {values.map((requiredXp, index) => (\n        <div className=\"levelsContainer\">\n          <div className=\"levelIndex\">{index + 1}</div>\n          <div className=\"levelXp\">\n            <input type=\"number\" value={requiredXp} onChange={(evt) => changeElement(index, parseInt(evt.target.value, 10))} />\n          </div>\n          <div className=\"levelDelete\">\n            <button onClick={() => deleteElement(index)}>Löschen</button>\n          </div>\n        </div>\n      ))}\n      <button className=\"levelAdd\" onClick={() => setValues([...values, values[values.length - 1] + 1])}>Neues Level</button>\n      <br />\n      <button className=\"levelsSave\" onClick={() => post(values.map((value, index) => ({ id: index + 1, requiredXp: value })))}>Speichern</button>\n      {loading && <>loading...</>}\n      {error && <>Error: {JSON.stringify(error)}</>}\n    </div>\n  );\n}","import { useCallback, useState } from \"react\";\nimport { Level } from \"./useData\";\n\nexport function usePostLevels() {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any | null>(null);\n\n  const post = useCallback(async (levels: Level[]) => {\n    try {\n      setLoading(true);\n      await fetch(`${window.location.hostname === \"localhost\" ? \"http://localhost:3000\" : \"\"}/api/levels`, {\n        method: \"POST\",\n        mode: \"no-cors\",\n        cache: 'no-cache',\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(levels)\n      })\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [setError, setLoading]);\n\n  return { loading, error, post };\n}\n","import React from \"react\";\nimport { Permission } from \"../permission\";\n\nexport default function Rewards(props: { permission: Permission; refetch: () => void }): JSX.Element {\n  return <>Belohnungen: todo</>;\n}\n","import React, { useState } from \"react\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { useData } from \"../api/useData\";\nimport Quests from \"./Quests\";\nimport GameHeader from \"./GameHeader\";\nimport GameFooter from \"./GameFooter\";\nimport { Permission } from \"../permission\";\nimport Levels from \"./Levels\";\nimport Rewards from \"./Rewards\";\nimport \"./Game.css\";\n\nexport default function Game(props: { permission: Permission }): JSX.Element {\n  const { data, error, loading, refetch } = useData();\n\n  return (\n    <div className=\"game\">\n      <GameHeader data={data} />\n      <div className=\"gameMain\">\n        {loading && <>Laden ...</>}\n        {error && <>{typeof error === \"string\" ? error : JSON.stringify(error)}</>}\n        {data && (\n            <>\n              <Switch>\n                <Route path=\"/levels\" exact>\n                  <Levels levels={data.levels} />\n                </Route>\n                <Route path=\"/quests\">\n                  <Quests quests={data.quests} permission={props.permission} refetch={refetch} />\n                </Route>\n                <Route path=\"/rewards\">\n                  <Rewards permission={props.permission} refetch={refetch} />\n                </Route>\n              </Switch>\n            </>\n          )\n        }\n      </div>\n      <Route path=\"/\" component={(p: any): JSX.Element => <GameFooter {...p} permission={props.permission} />} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\nimport { Permission } from \"./permission\";\n\nexport default function App() {\n  const [permission] = useState<Permission>(getPermission());\n\n  return (\n    <div className=\"app\" onTouchMove={(evt) => console.log(evt)}>\n      <Game permission={permission} />\n    </div>\n  );\n}\n\nfunction getPermission(): Permission {\n  const search = window.location.search;\n  if (search.toLowerCase().includes(\"fitti\")) return \"view\";\n  if (search.toLowerCase().includes(\"broiler\")) return \"edit\";\n  return \"none\";\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Redirect, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Route path=\"/\" exact component={() => <Redirect to=\"/quests\" />} />\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}