{"version":3,"sources":["api/useData.ts","api/usePostQuest.ts","components/QuestDetails.tsx","components/Quests.tsx","components/GameHeader.tsx","components/GameFooter.tsx","utils/http.ts","push-notifications.ts","usePushNotifications.ts","components/Levels.tsx","api/usePostLevels.ts","components/Rewards.tsx","components/Settings.tsx","components/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getData","a","fetch","res","status","json","console","error","statusText","text","Error","usePostQuest","useState","loading","setLoading","setError","post","useCallback","values","window","location","hostname","method","mode","cache","credentials","headers","referrerPolicy","body","JSON","stringify","QuestDetails","props","quest","onBack","permission","title","description","maxXp","minLevel","xp","disabled","archived","setValues","useEffect","onSave","id","onDelete","delete","className","onClick","value","onChange","evt","target","rows","type","parseInt","state","checked","versions","map","created_at","fields","Intl","DateTimeFormat","format","Date","substring","max_xp","min_level","Quests","Cookies","get","filterList","setFilterList","filterArchivedList","setFilterArchivedList","selectedQuest","setSelectedQuest","refetch","set","quests","filter","index","formatDescription","style","display","gridTemplateColumns","Notification","setTimeout","requestPermission","then","alert","remove","length","GameHeader","data","currentLevel","maxLevel","Progress","current","xpWithinCurrentLevel","max","xpToNextLevel","ratio","width","GameFooter","undefined","to","pathname","search","http","path","response","pushServerPublicKey","navigator","serviceWorker","ready","pushManager","subscribe","userVisibleOnly","applicationServerKey","pushNotificationSupported","usePushNotifications","userConsent","setUserConsent","userSubscription","setUserSubscription","pushServerSubscriptionId","setPushServerSubscriptionId","register","getSubscription","pushSubscription","existingSubscription","getExixtingSubscription","onClickAskUserPermission","askUserPermission","consent","name","message","code","onClickSusbribeToPushNotification","createNotificationSubscription","subscrition","catch","err","onClickSendSubscriptionToPushServer","log","onClickSendNotification","Levels","levels","sort","b","requiredXp","deleteElement","i","changeElement","valueNew","valueBefore","diff","usePostLevels","Rewards","Settings","Loading","Game","setData","useData","pushLoading","pushError","exact","component","p","App","params","URLSearchParams","token","sameSite","expires","getPermission","onTouchMove","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yaAuCeA,I,2EAAf,4BAAAC,EAAA,sEACoBC,MAAM,aAD1B,UAEqB,OADbC,EADR,QAEUC,OAFV,yCAEiCD,EAAIE,QAFrC,aAGEC,QAAQC,MAAR,uBAA8BJ,EAAIC,OAAlC,YAA4CD,EAAIK,WAAhD,YAA8DL,EAAIM,SAC5D,IAAIC,MAAMP,EAAIK,YAJtB,4C,sBC3BO,SAASG,IACd,MAA8BC,oBAAkB,GAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAqB,MAA/C,mBAAOL,EAAP,KAAcQ,EAAd,KAuBA,MAAO,CAAEF,UAASN,QAAOS,KArBZC,sBAAW,uCAAC,WAAOC,GAAP,SAAAjB,EAAA,sEAErBa,GAAW,GAFU,SAGfZ,MAAM,GAAD,OAAiC,cAA7BiB,OAAOC,SAASC,SAA2B,wBAA0B,GAAzE,cAAyF,CAClGC,OAAQ,OACRC,KAAM,UACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUZ,KAZF,sDAerBH,EAAS,EAAD,IAfa,uBAiBrBD,GAAW,GAjBU,0EAAD,sDAmBrB,CAACC,EAAUD,K,2BClBD,SAASiB,EAAaC,GAAmF,IAAD,QAC7GC,EAA8BD,EAA9BC,MAAOC,EAAuBF,EAAvBE,OAAQC,EAAeH,EAAfG,WAEvB,EAA4BvB,mBAAiB,CAAEwB,MAAO,GAAIC,YAAa,GAAIC,MAAO,EAAGC,SAAU,EAAGC,GAAI,KAAMC,UAAU,EAAOC,UAAU,IAAvI,mBAAOxB,EAAP,KAAeyB,EAAf,KAEA,EAAiChC,IAAzBE,EAAR,EAAQA,QAASN,EAAjB,EAAiBA,MAAOS,EAAxB,EAAwBA,KAExB4B,qBAAU,WACY,IAAD,QAAN,MAATX,GACFU,EAAU,CACRP,MAAK,UAAEH,EAAMG,aAAR,QAAiB,GACtBC,YAAW,UAAEJ,EAAMI,mBAAR,QAAuB,GAClCC,MAAOL,EAAMK,MACbC,SAAUN,EAAMM,SAChBC,GAAIP,EAAMO,GACVC,SAAQ,UAAER,EAAMQ,gBAAR,SACRC,SAAQ,UAAET,EAAMS,gBAAR,aAGX,CAACT,IAEJ,IAAMY,EAAS5B,sBAAW,sBAAC,sBAAAhB,EAAA,sEACnBe,EAAK,aAAE8B,GAAIb,EAAMa,IAAO5B,IADL,OAEzBgB,IAFyB,2CAGxB,CAACA,EAAQlB,EAAMiB,EAAOf,IAEnB6B,EAAW9B,sBAAW,sBAAC,sBAAAhB,EAAA,sEACrBe,EAAK,CAAEgC,QAAQ,EAAMF,GAAIb,EAAMa,KADV,OAE3BZ,IAF2B,2CAG1B,CAACA,EAAQlB,EAAMiB,IAElB,OAAO,sBAAKgB,UAAU,eAAf,UACL,sBAAKA,UAAU,qBAAf,UACE,cAAC,IAAD,CAAaA,UAAU,YAAYC,QAAS,kBAAMhB,OAClD,qBAAKe,UAAU,QAAf,SAEmB,SAAfd,EAEC,uBAAOgB,MAAOjC,EAAOkB,MAAOgB,SAAU,SAACC,GAAD,OAASV,EAAU,2BAAKzB,GAAN,IAAckB,MAAOiB,EAAIC,OAAOH,YAFzF,UAIAlB,EAAMG,aAJN,QAIe,SAIrB,qBAAKa,UAAU,QAAf,0BAGA,qBAAKA,UAAU,QAAf,SAEmB,SAAfd,EAEC,0BAAUoB,KAAM,GAAIJ,MAAOjC,EAAOmB,YAAae,SAAU,SAACC,GAAD,OAASV,EAAU,2BAAKzB,GAAN,IAAcmB,YAAagB,EAAIC,OAAOH,YAFlH,UAIAlB,EAAMI,mBAJN,QAIqB,MAGzB,qBAAKY,UAAU,QAAf,8BAGA,qBAAKA,UAAU,QAAf,SAEmB,SAAfd,EAEC,uBAAOqB,KAAK,SAASL,MAAOjC,EAAOqB,SAAUa,SAAU,SAACC,GAAD,OAASV,EAAU,2BAAKzB,GAAN,IAAcqB,SAAUkB,SAASJ,EAAIC,OAAOH,MAAO,UAE7HlB,EAAMM,WAGV,qBAAKU,UAAU,QAAf,yBAGA,qBAAKA,UAAU,QAAf,SAEmB,SAAfd,EAEC,uBAAOqB,KAAK,SAASL,MAAOjC,EAAOoB,MAAOc,SAAU,SAACC,GAAD,OAASV,EAAU,2BAAKzB,GAAN,IAAcoB,MAAOmB,SAASJ,EAAIC,OAAOH,MAAO,UAEvHlB,EAAMK,QAGV,qBAAKW,UAAU,QAAf,0BAGA,qBAAKA,UAAU,QAAf,SAEmB,SAAfd,EAEC,uBAAOqB,KAAK,SAASL,MAAK,UAAEjC,EAAOsB,UAAT,QAAe,IAAKY,SAAU,SAACC,GACxD,IAAMb,EAAKiB,SAASJ,EAAIC,OAAOH,MAAO,IACtCR,EAAU,2BAAKzB,GAAN,IAAcsB,GAAIA,EAAK,EAAI,KAAOA,QAG7B,WAAhBP,EAAMyB,MAAqB,IAAMzB,EAAMO,KAI1B,SAAfL,GACE,qCACE,qBAAKc,UAAU,QAAf,uBAGA,qBAAKA,UAAU,QAAf,SACE,uBAAOO,KAAK,WAAWG,QAASzC,EAAOuB,SAAUW,SAAU,SAACC,GAAD,OAASV,EAAU,2BAAKzB,GAAN,IAAcuB,SAAUY,EAAIC,OAAOK,gBAElH,qBAAKV,UAAU,QAAf,wBAGA,qBAAKA,UAAU,QAAf,SACE,uBAAOO,KAAK,WAAWG,QAASzC,EAAOwB,SAAUU,SAAU,SAACC,GAAD,OAASV,EAAU,2BAAKzB,GAAN,IAAcwB,SAAUW,EAAIC,OAAOK,gBAEpH,sBAAKV,UAAU,kBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,wBAAQC,QAASL,EAAjB,yBAEDZ,EAAMS,UACL,qBAAKO,UAAU,kBAAf,SACE,wBAAQC,QAASH,EAAjB,gCANN,OASGlC,QATH,IASGA,IAAW,kDACXN,GAAS,mCAAGsB,KAAKC,UAAUvB,QAE9B,2CACA,qBAAK0C,UAAU,cAAf,mBACGhB,EAAM2B,gBADT,aACG,EAAgBC,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,OAAnB,OACnB,sBAAKd,UAAU,cAAf,qBACWH,EADX,QACoB,IAAIkB,KAAKC,eAAe,MAAMC,OAAO,IAAIC,KAAKL,IADlE,IACiFA,EAAWM,UAAU,GAAI,IAAK,IAC7G,wBAAQlB,QAAS,kBAAMP,EAAU,uCAAKzB,GAAW6C,GAAjB,IAAyBzB,MAAOyB,EAAOM,OAAQ9B,SAAUwB,EAAOO,cAAhG,wC,MCxIC,SAASC,EAAOvC,GAC7B,MAAoCpB,mBAA+C,MAA7B4D,IAAQC,IAAI,eAAsD,SAA9BD,IAAQC,IAAI,eAAtG,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoD/D,mBAAuD,MAArC4D,IAAQC,IAAI,uBAAsE,SAAtCD,IAAQC,IAAI,uBAA9H,mBAAOG,EAAP,KAA2BC,EAA3B,KACA,EAA0CjE,mBAAuB,MAAjE,mBAAOkE,EAAP,KAAsBC,EAAtB,KAEA,EAAiCpE,IAAzBE,EAAR,EAAQA,QAASN,EAAjB,EAAiBA,MAAOS,EAAxB,EAAwBA,KAExB,OAAqB,MAAjB8D,EACK,cAAC,EAAD,CAAc7C,MAAO6C,EAAe5C,OAAQ,WAAQ6C,EAAiB,MAAO/C,EAAMgD,WAAa7C,WAAYH,EAAMG,aAIxH,qCACA,sBAAKc,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAf,UACE,uBAAOO,KAAK,WAAWG,QAASe,EAAYtB,SAAU,SAACC,GACrDsB,EAActB,EAAIC,OAAOK,SACzBa,IAAQS,IAAI,aAAZ,UAA6B5B,EAAIC,OAAOK,aAH5C,sBAMsB,SAArB3B,EAAMG,YACL,sBAAKc,UAAU,cAAf,UACE,uBAAOO,KAAK,WAAWG,QAASiB,EAAoBxB,SAAU,SAACC,GAC7DwB,EAAsBxB,EAAIC,OAAOK,SACjCa,IAAQS,IAAI,qBAAZ,UAAqC5B,EAAIC,OAAOK,aAHpD,wBAOD3B,EAAMkD,OACJC,QAAO,gBAAGzB,EAAH,EAAGA,MAAH,OAA8B,IAAfgB,GAAuC,WAAVhB,KACnDyB,QAAO,gBAAGzC,EAAH,EAAGA,SAAH,OAAyC,IAAvBkC,IAAkD,IAAblC,KAC9DyC,QAAO,gBAAGzC,EAAH,EAAGA,SAAUD,EAAb,EAAaA,SAAb,OAA0C,IAAbC,IAAmC,IAAbD,GAA4C,SAArBT,EAAMG,cACvF0B,KAAI,SAAC5B,EAAOmD,GAAR,aACH,sBAEEnC,UAAS,mBAAchB,EAAMyB,MAApB,YAA6BzB,EAAMQ,SAAW,WAAa,GAA3D,YAAiER,EAAMS,SAAW,WAAa,IACxGQ,QAAS,mBAA6B,SAArBlB,EAAMG,YAAyC,WAAhBF,EAAMyB,QAAuBqB,EAAiB9C,IAHhG,UAKE,sBAAKgB,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,SAAmD,SAArBjB,EAAMG,YAAyC,WAAhBF,EAAMyB,OAAsC,MAAfzB,EAAMG,MAAgB,mBAAnF,UAAiH,WAAhBH,EAAMyB,MAAqB,gBAAQ,IAApI,OAAyIzB,EAAMG,SAC5K,sBAAKa,UAAU,cAAf,UAEoB,WAAhBhB,EAAMyB,MAAqBzB,EAAMK,MAAjC,UAA4CL,EAAMO,GAAlD,cAA0DP,EAAMK,OAFpE,cAOuB,SAArBN,EAAMG,YAAyC,WAAhBF,EAAMyB,QAAuB,qBAAKT,UAAU,mBAAf,SAAmCoC,EAAiB,UAACpD,EAAMI,mBAAP,QAAsB,SAGxH,WAAhBJ,EAAMyB,OAAsB,sBAAKT,UAAU,mBAAf,sBAA4ChB,EAAMM,cAhB3E6C,SAqBS,SAArBpD,EAAMG,YACL,sBAAKmD,MAAO,CAAEC,QAAS,OAAQC,oBAAqB,kBAApD,UACE,qBAAKvC,UAAU,uBAAf,SACE,wBAAQC,QAAO,sBAAE,sBAAAjD,EAAA,sEACTe,EAAK,CAAEoB,MAAO,aAAcC,YAAa,GAAIC,MAAO,EAAGG,UAAU,EAAMF,SAAU,GAAIG,UAAU,IADtF,OAEfV,EAAMgD,UAFS,2CAAjB,0BAOF,8BACE,wBAAQ9B,QAAS,WAET,iBAAkB/B,OAKa,YAA5BsE,aAAatD,WAEpBuD,YAAW,kBAAM,IAAID,aAAa,4BAA2B,KAI1B,WAA5BA,aAAatD,YACpBsD,aAAaE,oBAAoBC,MAAK,SAAUzD,GAE3B,YAAfA,GACFuD,YAAW,kBAAM,IAAID,aAAa,4BAA2B,QAdjEI,MAAM,uDAHV,oCA4BF,8BACE,wBAAQ3C,QAAS,WACfsB,IAAQsB,OAAO,UADjB,2BAQLjF,GAAW,cACXN,GAAS,gDAAWsB,KAAKC,UAAUvB,SAKxC,SAAS8E,EAAkBhD,GACzB,OAAmB,MAAfA,EAA4B,MAC5BA,EAAY0D,OAAS,IAAY1D,EAC9BA,EAAY+B,UAAU,EAAG,IAAM,O,MCpHzB,SAAS4B,EAAWhE,GAAsC,IAAD,oBACtE,OACE,sBAAKiB,UAAU,aAAf,UACE,qBAAKA,UAAU,kBAAf,0BACA,sBAAKA,UAAU,kBAAf,uCACSjB,EAAMiE,YADf,aACS,EAAYC,oBADrB,QACqC,EADrC,0BAC2ClE,EAAMiE,YADjD,aAC2C,EAAYE,gBADvD,QACmE,OAEnE,cAACC,EAAD,CAAUC,QAAO,oBAAErE,EAAMiE,YAAR,aAAE,EAAYK,4BAAd,QAAsC,EAAGC,KAAK,oBAACvE,EAAMiE,YAAP,aAAC,EAAYO,qBAAb,QAA8B,IAA9B,oBAAoCxE,EAAMiE,YAA1C,aAAoC,EAAYK,4BAAhD,QAAwE,QAK7I,SAASF,EAASpE,GAChB,IAAMyE,EAAQ,IAAMzE,EAAMqE,QAAUrE,EAAMuE,IAE1C,OACE,sBAAKtD,UAAU,wBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKqC,MAAO,CAAEoB,MAAM,GAAD,OAAKD,EAAL,MAAiBxD,UAAU,sBAA9C,SACE,qBAAKA,UAAU,0BAAf,SACGjB,EAAMqE,cAIZrE,EAAMuE,IART,Y,0CCZW,SAASI,EAAW3E,GACjC,OACE,sBAAKiB,UAAU,aAAaqC,MAA4B,SAArBtD,EAAMG,WAAwB,CAAEqD,oBAAqB,4BAA0BoB,EAAlH,UACE,cAAC,IAAD,CAAMC,GAAI,CAAEC,SAAU,UAAWC,OAAQ/E,EAAMZ,SAAS2F,QAAxD,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAMF,GAAI,CAAEC,SAAU,WAAYC,OAAQ/E,EAAMZ,SAAS2F,QAAzD,SACE,cAAC,IAAD,MAGqB,SAArB/E,EAAMG,YACJ,cAAC,IAAD,CAAM0E,GAAI,CAAEC,SAAU,UAAWC,OAAQ/E,EAAMZ,SAAS2F,QAAxD,SACE,cAAC,IAAD,MAIN,cAAC,IAAD,CAAMF,GAAI,CAAEC,SAAU,YAAaC,OAAQ/E,EAAMZ,SAAS2F,QAA1D,SACE,cAAC,IAAD,SCMR,IAKeC,EALF,CACXhG,KAhCF,SAAciG,EAAcrF,GAC1B,OAAO1B,MAAM+G,EAAM,CACjBxF,YAAa,OACbC,QAAS,CAAE,eAAgB,iCAAkC,iBAAkB,QAC/EE,KAAMC,KAAKC,UAAUF,GACrBN,OAAQ,OACRC,KAAM,SAELqE,MAAK,SAASsB,GACb,OAAOA,EAAS7G,UAEjBuF,MAAK,SAASK,GACb,OAAOA,MAqBXxB,IAjBF,SAAawC,GACX,OAAO/G,MAAM+G,EAAM,CACjBxF,YAAa,OACbC,QAAS,CAAE,eAAgB,iCAAkC,iBAAkB,QAC/EJ,OAAQ,MACRC,KAAM,SAELqE,MAAK,SAASsB,GACb,OAAOA,EAAS7G,UAEjBuF,MAAK,SAASK,GACb,OAAOA,OC3BPkB,EAAsB,0F,4CAY5B,sBAAAlH,EAAA,sEACewF,aAAaE,oBAD5B,oF,kEAoCA,4BAAA1F,EAAA,sEAE8BmH,UAAUC,cAAcC,MAFtD,cAEQD,EAFR,gBAIeA,EAAcE,YAAYC,UAAU,CAC/CC,iBAAiB,EACjBC,qBAAsBP,IAN1B,oF,sBClCA,IAAMQ,EDRG,kBAAmBP,WAAa,gBAAiBjG,OCU3C,SAASyG,IACtB,MAAsChH,mBAAS6E,aAAatD,YAA5D,mBAAO0F,EAAP,KAAoBC,EAApB,KACA,EAAgDlH,mBAAkC,MAAlF,mBAAOmH,EAAP,KAAyBC,EAAzB,KACA,EAAgEpH,qBAAhE,mBAAOqH,EAAP,KAAiCC,EAAjC,KACA,EAA0BtH,mBAAqB,MAA/C,mBAAOL,EAAP,KAAcQ,EAAd,KACA,EAA8BH,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAqFA,OAnFA8B,qBAAU,WACJ+E,IACF7G,GAAW,GACXC,GAAS,GDcNqG,UAAUC,cAAcc,SAAS,UCbZvC,MAAK,WAC3B9E,GAAW,SAGd,IAEH8B,qBAAU,WACR9B,GAAW,GACXC,GAAS,GACoB,uCAAG,4BAAAd,EAAA,sED2B3BmH,UAAUC,cAAcC,MAC5B1B,MAAK,SAASyB,GACb,OAAOA,EAAcE,YAAYa,qBAElCxC,MAAK,SAASyC,GACb,OAAOA,KChCuB,OACxBC,EADwB,OAE9BN,EAAoBM,GACpBxH,GAAW,GAHmB,2CAAH,oDAK7ByH,KACC,IAgEI,CACLC,yBA/D+BvH,uBAAY,WAG3C,OAFAH,GAAW,GACXC,GAAS,G,0CACF0H,GAAoB7C,MAAK,SAAA8C,GAC9BZ,EAAeY,GACC,YAAZA,GACF3H,EAAS,CACP4H,KAAM,iBACNC,QAAS,kDACTC,KAAM,IAGV/H,GAAW,QAEZ,CAACA,EAAYC,EAAU+G,IAkDxBgB,kCAhDwC7H,uBAAY,WAGpD,OAFAH,GAAW,GACXC,GAAS,G,0CACFgI,GACJnD,MAAK,SAASoD,GACbhB,EAAoBgB,GACpBlI,GAAW,MAEZmI,OAAM,SAAAC,GACL5I,QAAQC,MAAM,gDAAiD2I,EAAK,QAASA,EAAIP,KAAM,WAAYO,EAAIN,QAAS,QAASM,EAAIL,MAC7H9H,EAASmI,GACTpI,GAAW,QAEd,CAACA,EAAYC,EAAUiH,IAoCxBmB,oCAlC0ClI,uBAAY,WAC9B,MAApB8G,GAA4C,YAAhBF,GAIhC/G,GAAW,GACXC,GAAS,GACTiG,EACGhG,KAAK,oBAAqB+G,GAC1BnC,MAAK,SAACsB,GACLgB,EAA4BhB,EAASpE,IACrChC,GAAW,MAEZmI,OAAM,SAACC,GACNpI,GAAW,GACXC,EAASmI,OAbX5I,QAAQ8I,IAAI,sDAeb,CAACrB,EAAkBF,EAAa/G,EAAYC,EAAUmH,IAkBvDD,2BACAoB,wBAjB8BpI,sBAAW,sBAAC,sBAAAhB,EAAA,6DAC1Ca,GAAW,GACXC,GAAS,GAFiC,SAGpCiG,EACHvC,IADG,qBAEHwE,OAAM,SAACC,GACNpI,GAAW,GACXC,EAASmI,MAP6B,OAS1CpI,GAAW,GAT+B,2CAUzC,CAACA,EAAYC,IAQd8G,cACAF,4BACAI,mBACAxH,QACAM,W,kBC/GW,SAASyI,EAAOtH,GAC7B,MAA4BpB,mBAAmB,IAA/C,mBAAOM,EAAP,KAAeyB,EAAf,KAEAC,qBAAU,WACRD,EAAUX,EAAMuH,OAAOC,MAAK,SAACvJ,EAAGwJ,GAAJ,OAAUxJ,EAAE6C,GAAK2G,EAAE3G,MAAIe,KAAI,qBAAG6F,iBACzD,CAAC1H,EAAMuH,SAEV,IAAMI,EAAgB1I,uBAAY,SAAC2I,GAC7BA,EAAI,GAAKA,GAAK1I,EAAO6E,QACzBpD,EAAUzB,EAAOiE,QAAO,SAAChC,EAAOiC,GAAR,OAAkBA,IAAUwE,QACnD,CAAC1I,EAAQyB,IAENkH,EAAgB5I,uBAAY,SAAC2I,EAAWE,GAC5C,KAAIF,EAAI,GAAKA,GAAK1I,EAAO6E,QAAU+D,EAAW,GAA9C,CACA,IAAMC,EAAc7I,EAAO0I,EAAI,GAC/B,KAAmB,MAAfG,GAAuBA,GAAeD,GAA1C,CACA,IACME,EAAOF,EADQ5I,EAAO0I,GAE5BjH,EAAUzB,EAAO2C,KAAI,SAACV,EAAOiC,GAAR,OAAkBwE,GAAKxE,EAAQjC,EAAQ6G,EAAO7G,UAClE,CAACjC,EAAQyB,IAEZ,ECvBK,WACL,MAA8B/B,oBAAkB,GAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAqB,MAA/C,mBAAOL,EAAP,KAAcQ,EAAd,KAuBA,MAAO,CAAEF,UAASN,QAAOS,KArBZC,sBAAW,uCAAC,WAAOsI,GAAP,SAAAtJ,EAAA,sEAErBa,GAAW,GAFU,SAGfZ,MAAM,GAAD,OAAiC,cAA7BiB,OAAOC,SAASC,SAA2B,wBAA0B,GAAzE,eAA0F,CACnGC,OAAQ,OACRC,KAAM,UACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUyH,KAZF,sDAerBxI,EAAS,EAAD,IAfa,uBAiBrBD,GAAW,GAjBU,0EAAD,sDAmBrB,CAACC,EAAUD,KDAmBmJ,GAAzBpJ,EAAR,EAAQA,QAASN,EAAjB,EAAiBA,MAAOS,EAAxB,EAAwBA,KAExB,OACE,sBAAKiC,UAAU,SAAf,UACE,uCACC/B,EAAO2C,KAAI,SAAC6F,EAAYtE,GAAb,OACV,sBAAKnC,UAAU,kBAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BmC,EAAQ,IACrC,qBAAKnC,UAAU,UAAf,SACE,uBAAOO,KAAK,SAASL,MAAOuG,EAAYtG,SAAU,SAACC,GAAD,OAASwG,EAAczE,EAAO3B,SAASJ,EAAIC,OAAOH,MAAO,UAE7G,qBAAKF,UAAU,cAAf,SACE,wBAAQC,QAAS,kBAAMyG,EAAcvE,IAArC,gCAIN,wBAAQnC,UAAU,WAAWC,QAAS,kBAAMP,EAAU,GAAD,mBAAKzB,GAAL,CAAaA,EAAOA,EAAO6E,OAAS,GAAK,MAA9F,yBACA,uBACA,wBAAQ9C,UAAU,aAAaC,QAAS,kBAAMlC,EAAKE,EAAO2C,KAAI,SAACV,EAAOiC,GAAR,MAAmB,CAAEtC,GAAIsC,EAAQ,EAAGsE,WAAYvG,QAA9G,uBACCtC,GAAW,kDACXN,GAAS,+CAAUsB,KAAKC,UAAUvB,SE3C1B,SAAS2J,EAAQlI,GAC9B,OAAO,yDCDM,SAASmI,EAASnI,GAS/B,OACE,gCACE,+CACA,uBAAOwB,KAAK,WAAWG,QAA+B,YAAtB3B,EAAM6F,YAA2BzE,SAAQ,sBAAE,sBAAAnD,EAAA,sEACnE+B,EAAMwG,2BAD6D,uBAEnExG,EAAM8G,oCAF6D,6CAF7E,0BAME,cAAC,EAAD,CAASjI,QAASmB,EAAMnB,UACxB,cAAC,EAAD,CAAON,MAAOyB,EAAMzB,QAEG,SAArByB,EAAMG,YACN,8BACE,wBAAQe,QAASlB,EAAMqH,wBAAvB,sCAQV,IAAMe,EAAU,SAAC,GAAD,SAAGvJ,QAA8C,6CAAyB,MACpFH,EAAQ,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,OACZA,EACE,0BAAS0C,UAAU,YAAnB,UACE,6BAAK1C,EAAMoI,OACX,iDAAoBpI,EAAMqI,WAC1B,8CAAiBrI,EAAMsI,WAEvB,M,MC3BS,SAASwB,EAAKrI,GAC3B,MbgCK,WACL,MAA8BpB,oBAAkB,GAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,wBAA2BgG,GAAnD,mBAAOX,EAAP,KAAaqE,EAAb,KACA,EAA0B1J,wBAA0BgG,GAApD,mBAAOrG,EAAP,KAAcQ,EAAd,KAEMiE,EAAU/D,uBAAY,WAC1B,sBAAC,sBAAAhB,EAAA,sEAEGa,GAAW,GAFd,KAGGwJ,EAHH,SAGiBtK,IAHjB,kCAIGe,OAAS6F,GAJZ,kDAMGtG,QAAQ8I,IAAR,MACAkB,OAAQ1D,GACR7F,EAAS,oCARZ,yBAUGD,GAAW,GAVd,4EAAD,KAaC,IAIH,OAFA8B,oBAAUoC,EAAS,CAACA,IAEb,CAAEiB,OAAM1F,QAAOM,UAASmE,WavDWuF,GAAlCtE,EAAR,EAAQA,KAAM1F,EAAd,EAAcA,MAAOM,EAArB,EAAqBA,QAASmE,EAA9B,EAA8BA,QAC9B,EASI4C,IARFC,EADF,EACEA,YACAE,EAFF,EAEEA,iBACAS,EAHF,EAGEA,yBACAM,EAJF,EAIEA,kCACAK,EALF,EAKEA,oCACAE,EANF,EAMEA,wBACSmB,EAPX,EAOE3J,QACO4J,EART,EAQElK,MAQF,OALAqC,qBAAU,WACRtC,QAAQ8I,IAAI,4BACQ,YAAhBvB,GAAiD,MAApBE,GAA0BoB,MAC1D,CAACtB,EAAaE,EAAkBoB,IAGjC,sBAAKlG,UAAU,OAAf,UACE,cAAC,EAAD,CAAYgD,KAAMA,IAClB,sBAAKhD,UAAU,WAAf,UACGpC,GAAW,iDACXN,GAAS,mCAAoB,kBAAVA,EAAqBA,EAAQsB,KAAKC,UAAUvB,KAC/D0F,GACG,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgB,KAAK,UAAUyD,OAAK,EAA3B,SACE,cAAC,EAAD,CAAQnB,OAAQtD,EAAKsD,WAEvB,cAAC,IAAD,CAAOtC,KAAK,UAAZ,SACE,cAAC,EAAD,CAAQ/B,OAAQe,EAAKf,OAAQ/C,WAAYH,EAAMG,WAAY6C,QAASA,MAEtE,cAAC,IAAD,CAAOiC,KAAK,WAAZ,SACE,cAACiD,EAAD,CAAS/H,WAAYH,EAAMG,WAAY6C,QAASA,MAElD,cAAC,IAAD,CAAOiC,KAAK,YAAZ,SACE,cAACkD,EAAD,CACEhI,WAAYH,EAAMG,WAClB0F,YAAaA,EACbW,yBAA0BA,EAC1BM,kCAAmCA,EACnCO,wBAAyBA,EACzBxI,QAAS2J,EACTjK,MAAOkK,cAQrB,cAAC,IAAD,CAAOxD,KAAK,IAAI0D,UAAW,SAACC,GAAD,OAAyB,cAAC,EAAD,2BAAgBA,GAAhB,IAAmBzI,WAAYH,EAAMG,oBC3DhF,SAAS0I,IACtB,MAAqBjK,mBASvB,WAAsC,IAAD,EAC7BkK,EAAS,IAAIC,gBAAgB5J,OAAOC,SAAS2F,QAC7CiE,EAAK,UAAGF,EAAOrG,IAAI,gBAAd,QAA0BD,IAAQC,IAAI,SACpC,MAATuG,GAAexG,IAAQS,IAAI,QAAS+F,EAAO,CAAEC,SAAU,MAAOC,QAAS,KAC3E,MAAc,UAAVF,EAA0B,OAChB,YAAVA,EAA4B,OACzB,OAfmCG,IAAnChJ,EAAP,oBAEA,OACE,qBAAKc,UAAU,MAAMmI,YAAa,SAAC/H,GAAD,OAAS/C,QAAQ8I,IAAI/F,IAAvD,SACE,cAAC,EAAD,CAAMlB,WAAYA,MCTxB,IAYekJ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3F,MAAK,YAAkD,IAA/C4F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO9E,KAAK,IAAIyD,OAAK,EAACC,UAAW,kBAAM,cAAC,IAAD,CAAU9D,GAAG,eACpD,cAAC,EAAD,SAGJmF,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e7cc73f2.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nexport type questState = \"open\" | \"closed\" | \"hidden\";\n\nexport interface Quest {\n  id: string;\n  title: string;\n  description: string;\n  maxXp: number;\n  xp: number | null;\n  minLevel: number;\n  disabled: boolean;\n  archived: boolean;\n  state: questState;\n  versions?: Version[];\n}\n\nexport interface Version {\n  id: number;\n  quest_id: number;\n  created_at: string;\n  fields: any;\n}\n\nexport interface Level {\n  id: number;\n  requiredXp: number;\n}\n\nexport interface Data {\n  maxLevel: number;\n  currentLevel: number;\n  currentXp: number;\n  xpWithinCurrentLevel: number;\n  xpToNextLevel: number;\n  quests: Quest[];\n  levels: Level[];\n}\n\nasync function getData(): Promise<Data> {\n  const res = await fetch(\"/api/data\");\n  if (res.status === 200) return res.json();\n  console.error(`Fetch error: ${res.status} ${res.statusText} ${res.text()}`);\n  throw new Error(res.statusText);\n}\n\nexport function useData(): { data?: Data; error?: any; loading: boolean; refetch: () => void } {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [data, setData] = useState<Data | undefined>(undefined);\n  const [error, setError] = useState<any | undefined>(undefined);\n\n  const refetch = useCallback(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        setData(await getData());\n        setError(undefined);\n      } catch (err) {\n        console.log(err);\n        setData(undefined);\n        setError(\"Upps ein Fehler ist aufgetreten.\");\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(refetch, [refetch]);\n\n  return { data, error, loading, refetch };\n}\n","import { useCallback, useState } from \"react\";\n\ninterface Values {\n  id?: string;\n  title: string;\n  description: string;\n  maxXp: number;\n  minLevel: number;\n  disabled: boolean;\n  archived: boolean;\n}\n\nexport function usePostQuest() {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any | null>(null);\n\n  const post = useCallback(async (values: Values | { delete: true; id: string }) => {\n    try {\n      setLoading(true);\n      await fetch(`${window.location.hostname === \"localhost\" ? \"http://localhost:3000\" : \"\"}/api/quest`, {\n        method: \"POST\",\n        mode: \"no-cors\",\n        cache: 'no-cache',\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(values)\n      })\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [setError, setLoading]);\n\n  return { loading, error, post };\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { Quest } from \"../api/useData\";\nimport { usePostQuest } from \"../api/usePostQuest\";\nimport { Permission } from \"../permission\";\nimport \"./QuestDetails.css\";\n\ninterface Values {\n  title: string;\n  description: string;\n  maxXp: number;\n  minLevel: number;\n  xp: number | null;\n  disabled: boolean;\n  archived: boolean;\n}\n\nexport default function QuestDetails(props: { quest: Quest; onBack: () => void; permission: Permission }): JSX.Element {\n  const { quest, onBack, permission } = props;\n\n  const [values, setValues] = useState<Values>({ title: \"\", description: \"\", maxXp: 0, minLevel: 0, xp: null, disabled: false, archived: false });\n\n  const { loading, error, post } = usePostQuest();\n\n  useEffect(() => {\n    if (quest != null) {\n      setValues({\n        title: quest.title ?? \"\",\n        description: quest.description ?? \"\",\n        maxXp: quest.maxXp,\n        minLevel: quest.minLevel,\n        xp: quest.xp,\n        disabled: quest.disabled ?? false,\n        archived: quest.archived ?? false\n      })\n    }\n  }, [quest]);\n\n  const onSave = useCallback(async () => {\n    await post({ id: quest.id, ...values });\n    onBack();\n  }, [onBack, post, quest, values]);\n\n  const onDelete = useCallback(async () => {\n    await post({ delete: true, id: quest.id });\n    onBack();\n  }, [onBack, post, quest]);\n\n  return <div className=\"questDetails\">\n    <div className=\"backArrowContainer\" >\n      <BiArrowBack className=\"backArrow\" onClick={() => onBack()} />\n      <div className=\"value\">\n        {\n          permission === \"edit\"\n          ?\n          (<input value={values.title} onChange={(evt) => setValues({ ...values, title: evt.target.value })} />)\n          :\n          quest.title ?? \"-\"\n        }\n      </div>\n    </div>\n    <div className=\"label\">\n      Beschreibung\n    </div>\n    <div className=\"value\">\n      {\n        permission === \"edit\"\n        ?\n        (<textarea rows={10} value={values.description} onChange={(evt) => setValues({ ...values, description: evt.target.value })} />)\n        :\n        quest.description ?? \"-\"\n      }\n    </div>\n    <div className=\"label\">\n      Mindestens Level\n    </div>\n    <div className=\"value\">\n      {\n        permission === \"edit\"\n        ?\n        (<input type=\"number\" value={values.minLevel} onChange={(evt) => setValues({ ...values, minLevel: parseInt(evt.target.value, 10) })} />)\n        :\n        quest.minLevel\n      }\n    </div>\n    <div className=\"label\">\n      Maximale XP\n    </div>\n    <div className=\"value\">\n      {\n        permission === \"edit\"\n        ?\n        (<input type=\"number\" value={values.maxXp} onChange={(evt) => setValues({ ...values, maxXp: parseInt(evt.target.value, 10) })} />)\n        :\n        quest.maxXp\n      }\n    </div>\n    <div className=\"label\">\n      Erreichte XP\n    </div>\n    <div className=\"value\">\n      {\n        permission === \"edit\"\n        ?\n        (<input type=\"number\" value={values.xp ?? \"-\"} onChange={(evt) => {\n          const xp = parseInt(evt.target.value, 10);\n          setValues({ ...values, xp: xp < 0 ? null : xp })\n        }} />)\n        :\n        quest.state !== \"closed\" ? \"-\" : quest.xp\n      }\n    </div>\n    {\n      permission === \"edit\" && (\n        <>\n          <div className=\"label\">\n            Versteckt\n          </div>\n          <div className=\"value\">\n            <input type=\"checkbox\" checked={values.disabled} onChange={(evt) => setValues({ ...values, disabled: evt.target.checked })} />\n          </div>\n          <div className=\"label\">\n            Archiviert\n          </div>\n          <div className=\"value\">\n            <input type=\"checkbox\" checked={values.archived} onChange={(evt) => setValues({ ...values, archived: evt.target.checked })} />\n          </div>\n        <div className=\"buttonContainer\">\n          <div className=\"saveContainer\">\n            <button onClick={onSave}>Speichern</button>\n          </div>\n          {quest.archived && (\n            <div className=\"deleteContainer\">\n              <button onClick={onDelete}>Quest löschen</button>\n            </div>\n          )}\n          {loading ?? <>loading...</>}\n          {error && <>{JSON.stringify(error)}</>}\n        </div>\n        <h4>Versionen</h4>\n        <div className=\"versionList\">\n          {quest.versions?.map(({ id, created_at, fields }) => (\n            <div className=\"versionItem\">\n              Version {id} vom {new Intl.DateTimeFormat(\"de\").format(new Date(created_at))} {created_at.substring(11, 19)}{\" \"}\n              <button onClick={() => setValues({ ...values, ...fields, maxXp: fields.max_xp, minLevel: fields.min_level })}>🔃</button>\n            </div>\n          ))}\n        </div>\n      </>\n    )}\n  </div>;\n}","import React, { useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { Quest } from \"../api/useData\";\nimport { usePostQuest } from \"../api/usePostQuest\";\nimport { Permission } from \"../permission\";\nimport QuestDetails from \"./QuestDetails\";\nimport \"./Quests.css\";\n\nexport default function Quests(props: { quests: Quest[]; permission: Permission; refetch: () => void }): JSX.Element {\n  const [filterList, setFilterList] = useState<boolean>(Cookies.get(\"filterList\") != null ? Cookies.get(\"filterList\") === \"true\" : true);\n  const [filterArchivedList, setFilterArchivedList] = useState<boolean>(Cookies.get(\"filterArchivedList\") != null ? Cookies.get(\"filterArchivedList\") === \"true\" : false);\n  const [selectedQuest, setSelectedQuest] = useState<Quest | null>(null);\n\n  const { loading, error, post } = usePostQuest();\n\n  if (selectedQuest != null) {\n    return <QuestDetails quest={selectedQuest} onBack={() => { setSelectedQuest(null); props.refetch() }} permission={props.permission} />;\n  }\n\n  return (\n    <>\n    <div className=\"questList\">\n      <div className=\"questFilter\">\n        <input type=\"checkbox\" checked={filterList} onChange={(evt) => {\n          setFilterList(evt.target.checked);\n          Cookies.set(\"filterList\", `${evt.target.checked}`);\n        }} />Erledigte Quests\n      </div>\n      {props.permission === \"edit\" && (\n        <div className=\"questFilter\">\n          <input type=\"checkbox\" checked={filterArchivedList} onChange={(evt) => {\n            setFilterArchivedList(evt.target.checked);\n            Cookies.set(\"filterArchivedList\", `${evt.target.checked}`);\n          }} />Archivierte Quests\n        </div>\n      )}\n      {props.quests\n        .filter(({ state }) => filterList === true ? true : state !== \"closed\")\n        .filter(({ archived }) => filterArchivedList === true ? true : archived === false)\n        .filter(({ archived, disabled }) => (archived === false && disabled === false) || props.permission === \"edit\")\n        .map((quest, index) => (\n          <div\n            key={index}\n            className={`questBox ${quest.state} ${quest.disabled ? \"disabled\" : \"\"} ${quest.archived ? \"archived\" : \"\"}`}\n            onClick={() => !(props.permission === \"none\" && quest.state === \"hidden\") && setSelectedQuest(quest)}\n          >\n            <div className=\"questHeader\">\n              <div className=\"questTitle\">{(props.permission === \"none\" && quest.state === \"hidden\") || quest.title == null ? \"🔒 ???\" : `${quest.state === \"hidden\" ? \"🔒 \" : \"\"}${quest.title}`}</div>\n              <div className=\"questPoints\">\n                {\n                  quest.state !== \"closed\" ? quest.maxXp : `${quest.xp} / ${quest.maxXp}`\n                } XP\n              </div>\n            </div>\n            {\n              !(props.permission === \"none\" && quest.state === \"hidden\") && <div className=\"questDescription\">{formatDescription(quest.description ?? \"???\")}</div>\n            }\n            {\n              quest.state === \"hidden\" && <div className=\"questDescription\">Ab Level {quest.minLevel}</div>\n            }\n          </div>\n      ))}\n    </div>\n    {props.permission === \"edit\" && (\n      <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\" }}>\n        <div className=\"createQuestContainer\">\n          <button onClick={async () => {\n            await post({ title: \"Neue Quest\", description: \"\", maxXp: 1, disabled: true, minLevel: 20, archived: false });\n            props.refetch();\n          }}>\n            Neue Quest\n          </button>\n        </div>\n        <div>\n          <button onClick={() => {\n            // Let's check if the browser supports notifications\n            if (!(\"Notification\" in window)) {\n              alert(\"This browser does not support desktop notification\");\n            }\n\n            // Let's check whether notification permissions have already been granted\n            else if (Notification.permission === \"granted\") {\n              // If it's okay let's create a notification\n              setTimeout(() => new Notification(\"Unlocked next level 2!\"), 3000);\n            }\n\n            // Otherwise, we need to ask the user for permission\n            else if (Notification.permission !== \"denied\") {\n              Notification.requestPermission().then(function (permission) {\n                // If the user accepts, let's create a notification\n                if (permission === \"granted\") {\n                  setTimeout(() => new Notification(\"Unlocked next level 2!\"), 3000);\n                }\n              });\n            }\n\n            // At last, if the user has denied notifications, and you\n            // want to be respectful there is no need to bother them any more.\n          }}>\n            Notify me in 3 secs!\n          </button>\n        </div>\n        <div>\n          <button onClick={() => {\n            Cookies.remove(\"token\");\n          }}>\n            Log Out!\n          </button>\n        </div>\n      </div>\n    )}\n    {loading && \"loading ...\"}\n    {error && <>Fehler: {JSON.stringify(error)}</>}\n    </>\n  );\n}\n\nfunction formatDescription(description?: string): string {\n  if (description == null) return \"???\";\n  if (description.length < 100) return description;\n  return description.substring(0, 96) + \" ...\";\n}\n","import React from \"react\";\nimport { Data } from \"../api/useData\";\nimport \"./GameHeader.css\";\n\nexport default function GameHeader(props: { data?: Data }): JSX.Element {\n  return (\n    <div className=\"gameHeader\">\n      <div className=\"gameHeaderTitle\">Quest Master</div>\n      <div className=\"gameHeaderLevel\">\n        Level {props.data?.currentLevel ?? 1} / {props.data?.maxLevel ?? \"?\"}\n      </div>\n      <Progress current={props.data?.xpWithinCurrentLevel ?? 0} max={(props.data?.xpToNextLevel ?? 0) + (props.data?.xpWithinCurrentLevel ?? 1)} />\n    </div>\n  );\n}\n\nfunction Progress(props: { max: number; current: number }): JSX.Element {\n  const ratio = 100 * props.current / props.max;\n\n  return (\n    <div className=\"gameProgressContainer\">\n      <div className=\"gameProgressBar\">\n        <div style={{ width: `${ratio}%` }} className=\"gameProgressCurrent\">\n          <div className=\"gameProgressCurrentText\">\n            {props.current}\n          </div>\n        </div>\n      </div>\n      {props.max}↑\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Link, RouteChildrenProps } from \"react-router-dom\";\nimport { AiFillTrophy, AiFillSetting } from \"react-icons/ai\"\nimport { FaTasks } from \"react-icons/fa\"\nimport { RiFilePaper2Fill } from \"react-icons/ri\"\nimport \"./GameFooter.css\";\nimport { Permission } from \"../permission\";\n\nexport default function GameFooter(props: RouteChildrenProps & { permission: Permission }): JSX.Element {\n  return (\n    <div className=\"gameFooter\" style={props.permission === \"edit\" ? { gridTemplateColumns: \"auto auto auto auto\" } : undefined }>\n      <Link to={{ pathname: \"/quests\", search: props.location.search }}>\n        <FaTasks />\n      </Link>\n      <Link to={{ pathname: \"/rewards\", search: props.location.search }}>\n        <AiFillTrophy />\n      </Link>\n      {\n        props.permission === \"edit\" && (\n          <Link to={{ pathname: \"/levels\", search: props.location.search }}>\n            <RiFilePaper2Fill />\n          </Link>\n        )\n      }\n      <Link to={{ pathname: \"/settings\", search: props.location.search }}>\n        <AiFillSetting />\n      </Link>\n    </div>\n  );\n}\n","function post(path: string, body: any) {\n  return fetch(path, {\n    credentials: \"omit\",\n    headers: { \"content-type\": \"application/json;charset=UTF-8\", \"sec-fetch-mode\": \"cors\" },\n    body: JSON.stringify(body),\n    method: \"POST\",\n    mode: \"cors\"\n  })\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(data) {\n      return data;\n    });\n}\n\nfunction get(path: string) {\n  return fetch(path, {\n    credentials: \"omit\",\n    headers: { \"content-type\": \"application/json;charset=UTF-8\", \"sec-fetch-mode\": \"cors\" },\n    method: \"GET\",\n    mode: \"cors\"\n  })\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(data) {\n      return data;\n    });\n}\n\nconst http = {\n  post: post,\n  get: get\n};\n\nexport default http;\n","const pushServerPublicKey = \"BDTxsv_QJLLjMkKfKrZw9kLADmciH2_E1B4Smkp9kbOLHWlrNs_3jFZA3zCyYbw9GRKq5hoEhkcHiBMf8OiGKDQ\";\n\n/**\n * checks if Push notification and service workers are supported by your browser\n */\nfunction isPushNotificationSupported() {\n  return \"serviceWorker\" in navigator && \"PushManager\" in window;\n}\n\n/**\n * asks user consent to receive push notifications and returns the response of the user, one of granted, default, denied\n */\nasync function askUserPermission() {\n  return await Notification.requestPermission();\n}\n/**\n * shows a notification\n */\nfunction sendNotification() {\n  // const img = \"/images/jason-leung-HM6TMmevbZQ-unsplash.jpg\";\n  const text = \"Take a look at this brand new t-shirt!\";\n  const title = \"New Product Available\";\n  const options = {\n    body: text,\n    // icon: \"/images/jason-leung-HM6TMmevbZQ-unsplash.jpg\",\n    vibrate: [200, 100, 200],\n    tag: \"new-product\",\n    // image: img,\n    badge: \"https://spyna.it/icons/android-icon-192x192.png\",\n    actions: [{ action: \"Detail\", title: \"View\", icon: \"https://via.placeholder.com/128/ff0000\" }]\n  };\n  navigator.serviceWorker.ready.then(function(serviceWorker) {\n    serviceWorker.showNotification(title, options);\n  });\n}\n\n/**\n *\n */\nfunction registerServiceWorker() {\n  return navigator.serviceWorker.register(\"/sw.js\");\n}\n\n/**\n *\n * using the registered service worker creates a push notification subscription and returns it\n *\n */\nasync function createNotificationSubscription() {\n  //wait for service worker installation to be ready\n  const serviceWorker = await navigator.serviceWorker.ready;\n  // subscribe and return the subscription\n  return await serviceWorker.pushManager.subscribe({\n    userVisibleOnly: true,\n    applicationServerKey: pushServerPublicKey\n  });\n}\n\n/**\n * returns the subscription if present or nothing\n */\nfunction getUserSubscription(): Promise<PushSubscription | null> {\n  //wait for service worker installation to be ready, and then\n  return navigator.serviceWorker.ready\n    .then(function(serviceWorker) {\n      return serviceWorker.pushManager.getSubscription();\n    })\n    .then(function(pushSubscription) {\n      return pushSubscription;\n    });\n}\n\nexport {\n  isPushNotificationSupported,\n  askUserPermission,\n  registerServiceWorker,\n  sendNotification,\n  createNotificationSubscription,\n  getUserSubscription\n};","import { useState, useEffect, useCallback } from \"react\";\nimport http from \"./utils/http\";\n\n// https://itnext.io/react-push-notifications-with-hooks-d293d36f4836\n// https://github.com/Spyna/push-notification-demo\n\nimport {\n  isPushNotificationSupported,\n  askUserPermission,\n  registerServiceWorker,\n  createNotificationSubscription,\n  getUserSubscription\n} from \"./push-notifications\";\n\nconst pushNotificationSupported = isPushNotificationSupported();\n\nexport default function usePushNotifications() {\n  const [userConsent, setUserConsent] = useState(Notification.permission);\n  const [userSubscription, setUserSubscription] = useState<PushSubscription | null>(null);\n  const [pushServerSubscriptionId, setPushServerSubscriptionId] = useState();\n  const [error, setError] = useState<any | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (pushNotificationSupported) {\n      setLoading(true);\n      setError(false);\n      registerServiceWorker().then(() => {\n        setLoading(false);\n      });\n    }\n  }, []);\n  \n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    const getExixtingSubscription = async () => {\n      const existingSubscription = await getUserSubscription();\n      setUserSubscription(existingSubscription);\n      setLoading(false);\n    };\n    getExixtingSubscription();\n  }, []);\n\n  const onClickAskUserPermission = useCallback(() => {\n    setLoading(true);\n    setError(false);\n    return askUserPermission().then(consent => {\n      setUserConsent(consent);\n      if (consent !== \"granted\") {\n        setError({\n          name: \"Consent denied\",\n          message: \"You denied the consent to receive notifications\",\n          code: 0\n        });\n      }\n      setLoading(false);\n    });\n  }, [setLoading, setError, setUserConsent]);\n\n  const onClickSusbribeToPushNotification = useCallback(() => {\n    setLoading(true);\n    setError(false);\n    return createNotificationSubscription()\n      .then(function(subscrition) {\n        setUserSubscription(subscrition);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error(\"Couldn't create the notification subscription\", err, \"name:\", err.name, \"message:\", err.message, \"code:\", err.code);\n        setError(err);\n        setLoading(false);\n      });\n  }, [setLoading, setError, setUserSubscription]);\n\n  const onClickSendSubscriptionToPushServer = useCallback(() => {\n    if (userSubscription == null || userConsent !== \"granted\") {\n      console.log(\"No userSubscription present or consent not given\");\n      return;\n    }\n    setLoading(true);\n    setError(false);\n    http\n      .post(\"/api/subscription\", userSubscription)\n      .then((response: any) => {\n        setPushServerSubscriptionId(response.id);\n        setLoading(false);\n      })\n      .catch((err: any) => {\n        setLoading(false);\n        setError(err);\n      });\n  }, [userSubscription, userConsent, setLoading, setError, setPushServerSubscriptionId]);\n\n  const onClickSendNotification = useCallback(async () => {\n    setLoading(true);\n    setError(false);\n    await http\n      .get(`/api/subscription`)\n      .catch((err: any) => {\n        setLoading(false);\n        setError(err);\n      });\n    setLoading(false);\n  }, [setLoading, setError]);\n\n  return {\n    onClickAskUserPermission,\n    onClickSusbribeToPushNotification,\n    onClickSendSubscriptionToPushServer,\n    pushServerSubscriptionId,\n    onClickSendNotification,\n    userConsent,\n    pushNotificationSupported,\n    userSubscription,\n    error,\n    loading\n  };\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Level } from \"../api/useData\";\nimport { usePostLevels } from \"../api/usePostLevels\";\nimport \"./Levels.css\";\n\nexport default function Levels(props: { levels: Level[] }): JSX.Element {\n  const [values, setValues] = useState<number[]>([]);\n\n  useEffect(() => {\n    setValues(props.levels.sort((a, b) => a.id - b.id).map(({ requiredXp }) => requiredXp));\n  }, [props.levels]);\n\n  const deleteElement = useCallback((i: number) => {\n    if (i < 0 || i >= values.length) return;\n    setValues(values.filter((value, index) => index !== i));\n  }, [values, setValues]);\n\n  const changeElement = useCallback((i: number, valueNew: number) => {\n    if (i < 0 || i >= values.length || valueNew < 0) return;\n    const valueBefore = values[i - 1];\n    if (valueBefore != null && valueBefore >= valueNew) return;\n    const valueCurrent = values[i];\n    const diff = valueNew - valueCurrent;\n    setValues(values.map((value, index) => i <= index ? value + diff : value));\n  }, [values, setValues]);\n\n  const { loading, error, post } = usePostLevels();\n\n  return (\n    <div className=\"levels\">\n      <b>Levels</b>\n      {values.map((requiredXp, index) => (\n        <div className=\"levelsContainer\">\n          <div className=\"levelIndex\">{index + 1}</div>\n          <div className=\"levelXp\">\n            <input type=\"number\" value={requiredXp} onChange={(evt) => changeElement(index, parseInt(evt.target.value, 10))} />\n          </div>\n          <div className=\"levelDelete\">\n            <button onClick={() => deleteElement(index)}>Löschen</button>\n          </div>\n        </div>\n      ))}\n      <button className=\"levelAdd\" onClick={() => setValues([...values, values[values.length - 1] + 1])}>Neues Level</button>\n      <br />\n      <button className=\"levelsSave\" onClick={() => post(values.map((value, index) => ({ id: index + 1, requiredXp: value })))}>Speichern</button>\n      {loading && <>loading...</>}\n      {error && <>Error: {JSON.stringify(error)}</>}\n    </div>\n  );\n}","import { useCallback, useState } from \"react\";\nimport { Level } from \"./useData\";\n\nexport function usePostLevels() {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any | null>(null);\n\n  const post = useCallback(async (levels: Level[]) => {\n    try {\n      setLoading(true);\n      await fetch(`${window.location.hostname === \"localhost\" ? \"http://localhost:3000\" : \"\"}/api/levels`, {\n        method: \"POST\",\n        mode: \"no-cors\",\n        cache: 'no-cache',\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(levels)\n      })\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [setError, setLoading]);\n\n  return { loading, error, post };\n}\n","import React from \"react\";\nimport { Permission } from \"../permission\";\n\nexport default function Rewards(props: { permission: Permission; refetch: () => void }): JSX.Element {\n  return <>Belohnungen: todo</>;\n}\n","import React from \"react\";\nimport { Permission } from \"../permission\";\n\nexport default function Settings(props: {\n  permission: Permission;\n  userConsent: \"default\" | \"denied\" | \"granted\";\n  onClickAskUserPermission: () => Promise<void>;\n  onClickSusbribeToPushNotification: () => Promise<void>;\n  onClickSendNotification: () => Promise<void>;\n  loading: boolean;\n  error: any;\n}): JSX.Element {\n  return (\n    <div>\n      <h2>Einstellungen</h2>\n      <input type=\"checkbox\" checked={props.userConsent === \"granted\"} onChange={async () => {\n        await props.onClickAskUserPermission();\n        await props.onClickSusbribeToPushNotification();\n      }} />Push-Benachrichtigungen\n      <Loading loading={props.loading} />\n      <Error error={props.error} />\n      {\n        props.permission === \"edit\" && (\n        <div>\n          <button onClick={props.onClickSendNotification}>Send a notification</button>\n        </div>\n        )\n      }\n    </div>\n  )\n}\n\nconst Loading = ({ loading }: { loading: boolean }) => loading ? <span>Laden ...</span> : null;\nconst Error = ({ error }: { error: any }) =>\n  error ? (\n    <section className=\"app-error\">\n      <h2>{error.name}</h2>\n      <p>Error message : {error.message}</p>\n      <p>Error code : {error.code}</p>\n    </section>\n  ) : null;\n","import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useData } from \"../api/useData\";\nimport Quests from \"./Quests\";\nimport GameHeader from \"./GameHeader\";\nimport GameFooter from \"./GameFooter\";\nimport { Permission } from \"../permission\";\nimport usePushNotifications from \"../usePushNotifications\";\nimport Levels from \"./Levels\";\nimport Rewards from \"./Rewards\";\nimport Settings from \"./Settings\";\nimport \"./Game.css\";\n\nexport default function Game(props: { permission: Permission }): JSX.Element {\n  const { data, error, loading, refetch } = useData();\n  const {\n    userConsent,\n    userSubscription,\n    onClickAskUserPermission,\n    onClickSusbribeToPushNotification,\n    onClickSendSubscriptionToPushServer,\n    onClickSendNotification,\n    loading: pushLoading,\n    error: pushError\n  } = usePushNotifications();\n\n  useEffect(() => {\n    console.log(\"update push subscription\");\n    if (userConsent === \"granted\" && userSubscription != null) onClickSendSubscriptionToPushServer();\n  }, [userConsent, userSubscription, onClickSendSubscriptionToPushServer]);\n\n  return (\n    <div className=\"game\">\n      <GameHeader data={data} />\n      <div className=\"gameMain\">\n        {loading && <>Laden ...</>}\n        {error && <>{typeof error === \"string\" ? error : JSON.stringify(error)}</>}\n        {data && (\n            <>\n              <Switch>\n                <Route path=\"/levels\" exact>\n                  <Levels levels={data.levels} />\n                </Route>\n                <Route path=\"/quests\">\n                  <Quests quests={data.quests} permission={props.permission} refetch={refetch} />\n                </Route>\n                <Route path=\"/rewards\">\n                  <Rewards permission={props.permission} refetch={refetch} />\n                </Route>\n                <Route path=\"/settings\">\n                  <Settings\n                    permission={props.permission}\n                    userConsent={userConsent}\n                    onClickAskUserPermission={onClickAskUserPermission}\n                    onClickSusbribeToPushNotification={onClickSusbribeToPushNotification}\n                    onClickSendNotification={onClickSendNotification}\n                    loading={pushLoading}\n                    error={pushError}\n                  />\n                </Route>\n              </Switch>\n            </>\n          )\n        }\n      </div>\n      <Route path=\"/\" component={(p: any): JSX.Element => <GameFooter {...p} permission={props.permission} />} />\n    </div>\n  );\n}\n","import Cookies from \"js-cookie\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\nimport { Permission } from \"./permission\";\n\nexport default function App() {\n  const [permission] = useState<Permission>(getPermission());\n\n  return (\n    <div className=\"app\" onTouchMove={(evt) => console.log(evt)}>\n      <Game permission={permission} />\n    </div>\n  );\n}\n\nfunction getPermission(): Permission {\n  const params = new URLSearchParams(window.location.search);\n  const token = params.get(\"token\") ?? Cookies.get(\"token\");\n  if (token != null) Cookies.set(\"token\", token, { sameSite: \"lax\", expires: 30 });\n  if (token === \"fitti\") return \"view\";\n  if (token === \"broiler\") return \"edit\";\n  return \"none\";\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Redirect, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Route path=\"/\" exact component={() => <Redirect to=\"/quests\" />} />\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}